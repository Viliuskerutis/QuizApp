//noinspection GradleCompatible
apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.example.kerut.quizapp"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testOptions {
            unitTests.returnDefaultValues = true
        }
    }
    dependencies {

        compile fileTree(dir: 'libs', include: ['*.jar'])
        androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
            exclude group: 'com.android.support', module: 'support-annotations'
        })

        buildTypes {
            release {
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                testCoverageEnabled false
            }
            debug {
//your debug part
//add tests coverage using Jacoco
                testCoverageEnabled true
            }
        }
        //Enable the coverage report for unit test
        android.testOptions {
            unitTests.all {
                jacoco {
                    includeNoLocationClasses = true
                }
            }
        }
        task jacocoTestReport(type: JacocoReport, dependsOn: [
//if you have already run those tasks in your build, just comment them
'testMycmsMockDebugUnitTest',
'testMycmsProdDebugUnitTest',
'createMycmsMockDebugCoverageReport',
'createMycmsProdDebugCoverageReport',
        ]){
            //Define which type of report you want to generate
            reports {
                xml.enabled = true
                html.enabled = true
            }
            //define which classes to exclude
        def fileFilter = [
                '**/R.class',
                '**/QuizActivity.java',
                '**/R$*.class',
                '**/BuildConfig.*',
                '**/Manifest*.*',
                '**/*$ViewInjector*.*',
                '**/*$ViewBinder*.*',
                '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
                '**/*Module.*', // Modules for Dagger.
                '**/*Dagger*.*', // Dagger auto-generated code.
                '**/*MembersInjector*.*', // Dagger auto-generated code.
                '**/*_Provide*Factory*.*',
                '**/*_Factory.*', //Dagger auto-generated code
                '**/*$*$*.*', // Anonymous classes generated by kotlin
                //add libraries
                'android/**/*.*',
                'com/**/*.*',
                'uk/**/*.*',
                'io/**/*.*',
                //remove what we don't test
                'androidTest/**/*.*',
                'test/**/*.*',
                '**/injector/**/*.*',
                '**/model/**/*.*',
                '**/mock/**/*.*',
                '**/event/**/*.*',
                '**/**_ViewBinding**',
                '**/*EventType.*',
                '**/**Mocked'
        ]
        def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/mycmsProd/debug", excludes: fileFilter)
        def mainSrc = files(["src/main/java", "src/mycms/java"])
//Explain to Jacoco where is your source code
        sourceDirectories = files([mainSrc])
//Explain to Jacoco where are you .class file
        classDirectories = files([debugTree])
        //As you want to gather all your tests reports, add the ec and exec you want to be took into
        //account when generating the report
        executionData = fileTree(dir: "$buildDir", includes: [
                "jacoco/testMycmsMockDebugUnitTest.exec",
                "jacoco/testMycmsProdDebugUnitTest.exec",
                "outputs/code-coverage/connected/flavors/**/*coverage.ec"
        ])
    }
        //noinspection GradleCompatible
        compile 'com.android.support:appcompat-v7:27.1.1'
        compile 'com.android.support.constraint:constraint-layout:1.1.3'
        compile 'com.android.support:recyclerview-v7:27.1.1'
        compile 'com.facebook.android:facebook-android-sdk:4.38.1'
        testCompile 'junit:junit:4.12'
    }
}